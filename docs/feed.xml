<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<title>Today, I Learned</title>
<id>https://jaredkrinke.github.io/til/</id>
<link rel="self" href="https://jaredkrinke.github.io/til/feed.xml"/>
<link rel="alternate" href="https://jaredkrinke.github.io/til/"/>
<author>
<name>Today, I Learned</name>
</author>
<updated>2025-07-14T00:00:00.000Z</updated>

<entry>
<title>FidoNet was a network of bulletin board systems</title>
<id>https://jaredkrinke.github.io/til/fidonet.html</id>
<link rel="alternate" href="https://jaredkrinke.github.io/til/fidonet.html"/>
<updated>2025-07-14T00:00:00.000Z</updated>
<summary type="text">FidoNet was a network of bulletin board systems</summary>
<content type="html">&lt;p&gt;Despite being old enough to remember dialing into a &lt;a href=&quot;https://en.wikipedia.org/wiki/Bulletin_board_system&quot;&gt;bulletin board system&lt;/a&gt; (BBS), I never knew until recently (while watching &lt;a href=&quot;http://www.bbsdocumentary.com/&quot;&gt;BBS: The Documentary&lt;/a&gt;) that &lt;strong&gt;BBSes were eventually networked together, mainly under a scheme called &lt;a href=&quot;https://en.wikipedia.org/wiki/FidoNet&quot;&gt;FidoNet&lt;/a&gt;&lt;/strong&gt;. It&#039;s hard to imagine that globe-spanning email and forums existed for the general public prior to the Internet. Apparently FidoNet persists even to this day!&lt;/p&gt;
</content>
</entry>
<entry>
<title>Use &quot;color-mix()&quot; for computing colors in CSS</title>
<id>https://jaredkrinke.github.io/til/css-color-mixing.md.html</id>
<link rel="alternate" href="https://jaredkrinke.github.io/til/css-color-mixing.md.html"/>
<updated>2025-07-08T00:00:00.000Z</updated>
<summary type="text">Use &quot;color-mix()&quot; for computing colors in CSS</summary>
<content type="html">&lt;p&gt;Recently, CSS gained the ability to compute colors using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color-mix&quot;&gt;&lt;code&gt;color-mix()&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I try to keep my CSS simple, but there&#039;s one scenario where I need to compute colors: &lt;strong&gt;creating light vs. dark mode-agnostic themes&lt;/strong&gt;. For example: this site. One trouble is that CSS doesn&#039;t expose the browser&#039;s default styles/colors, so previously I was stuck with essentially two colors: white and black. But now I&#039;m able to generate shades of gray that work in both light and dark mode:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;i class=&quot;hl-comment&quot;&gt;/* Enable both light and dark modes */&lt;/i&gt;
&lt;span class=&quot;hl-pseudoclass&quot;&gt;:root&lt;/span&gt; &lt;span class=&quot;hl-operator&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;hl-identifier&quot;&gt;color-scheme&lt;/span&gt;&lt;span class=&quot;hl-operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hl-identifier&quot;&gt;light&lt;/span&gt; &lt;span class=&quot;hl-identifier&quot;&gt;dark&lt;/span&gt;&lt;span class=&quot;hl-operator&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;hl-operator&quot;&gt;}&lt;/span&gt;

&lt;i class=&quot;hl-comment&quot;&gt;/* Add a faint background to code blocks */&lt;/i&gt;
&lt;b class=&quot;hl-tag&quot;&gt;pre&lt;/b&gt;&lt;span class=&quot;hl-operator&quot;&gt;,&lt;/span&gt; &lt;b class=&quot;hl-tag&quot;&gt;code&lt;/b&gt;&lt;span class=&quot;hl-pseudoclass&quot;&gt;:not&lt;/span&gt;&lt;span class=&quot;hl-operator&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hl-constant&quot;&gt;pre&lt;/span&gt; &lt;span class=&quot;hl-constant&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;hl-operator&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;hl-operator&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;hl-property&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;hl-operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hl-identifier&quot;&gt;color-mix&lt;/span&gt;&lt;span class=&quot;hl-operator&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hl-identifier&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hl-identifier&quot;&gt;srgb&lt;/span&gt;&lt;span class=&quot;hl-operator&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hl-identifier&quot;&gt;currentColor&lt;/span&gt; &lt;i class=&quot;hl-number&quot;&gt;12%&lt;/i&gt;&lt;span class=&quot;hl-operator&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hl-constant&quot;&gt;transparent&lt;/span&gt;&lt;span class=&quot;hl-operator&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hl-operator&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;hl-property&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;hl-operator&quot;&gt;:&lt;/span&gt; &lt;i class=&quot;hl-number&quot;&gt;0.5em&lt;/i&gt;&lt;span class=&quot;hl-operator&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;hl-operator&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first line means that the site supports both light and dark mode. The other lines mean that code blocks have a background that is generated from &lt;code&gt;currentColor&lt;/code&gt; (i.e. the color of text--dark for light mode and light for dark mode). This yields a subtle but noticeable shade of gray that works nicely regardless of dark mode. Open F12 dev tools and toggle light/dark mode and behold the result!&lt;/p&gt;
</content>
</entry>
<entry>
<title>Use &quot;display: table&quot; to render non-table HTML elements like tables</title>
<id>https://jaredkrinke.github.io/til/css-display-table.html</id>
<link rel="alternate" href="https://jaredkrinke.github.io/til/css-display-table.html"/>
<updated>2025-07-06T00:00:00.000Z</updated>
<summary type="text">Use &quot;display: table&quot; to render non-table HTML elements like tables</summary>
<content type="html">&lt;p&gt;It&#039;s possible to cause non-&lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; HTML elements to render like tables using the following (each line on a different element);&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;hl-identifier&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;hl-operator&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;hl-property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;hl-operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hl-constant&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;hl-operator&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;hl-operator&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;hl-identifier&quot;&gt;bar&lt;/span&gt; &lt;span class=&quot;hl-operator&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;hl-property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;hl-operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hl-constant&quot;&gt;table-row&lt;/span&gt;&lt;span class=&quot;hl-operator&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;hl-operator&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;hl-identifier&quot;&gt;baz&lt;/span&gt; &lt;span class=&quot;hl-operator&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;hl-property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;hl-operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hl-constant&quot;&gt;table-cell&lt;/span&gt;&lt;span class=&quot;hl-operator&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;hl-operator&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Why would you do this? Well, in my case, I wanted to have an unordered list (&lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; and its &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; children) to look appear as a table with two columns. I did this so that text-mode (or old) browsers (like lynx and w3m) would just displaya normal list, while still having nice formatting on modern browsers. The only issue I encountered is that Dillo appears to interpret &amp;quot;unknown&amp;quot; &lt;code&gt;display&lt;/code&gt; values as no formatting at all--but that&#039;s not a big deal since Dillo users are probably used to disabling remote stylesheets anyway.&lt;/p&gt;
&lt;p&gt;In my case, the CSS looked like this (making all &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; elements the same width, without any automatic line-wrapping):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;b class=&quot;hl-tag&quot;&gt;ul&lt;/b&gt;&lt;span class=&quot;hl-operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;hl-identifier&quot;&gt;posts&lt;/span&gt; &lt;span class=&quot;hl-operator&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;hl-property&quot;&gt;padding-left&lt;/span&gt;&lt;span class=&quot;hl-operator&quot;&gt;:&lt;/span&gt; &lt;i class=&quot;hl-number&quot;&gt;0em&lt;/i&gt;&lt;span class=&quot;hl-operator&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;hl-property&quot;&gt;list-style-type&lt;/span&gt;&lt;span class=&quot;hl-operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hl-constant&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;hl-operator&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;hl-property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;hl-operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hl-constant&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;hl-operator&quot;&gt;}&lt;/span&gt;
&lt;b class=&quot;hl-tag&quot;&gt;ul&lt;/b&gt;&lt;span class=&quot;hl-operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;hl-identifier&quot;&gt;posts&lt;/span&gt; &lt;b class=&quot;hl-tag&quot;&gt;li&lt;/b&gt; &lt;span class=&quot;hl-operator&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;hl-property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;hl-operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hl-constant&quot;&gt;table-row&lt;/span&gt;&lt;span class=&quot;hl-operator&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;hl-operator&quot;&gt;}&lt;/span&gt;
&lt;b class=&quot;hl-tag&quot;&gt;ul&lt;/b&gt;&lt;span class=&quot;hl-operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;hl-identifier&quot;&gt;posts&lt;/span&gt; &lt;span class=&quot;hl-identifier&quot;&gt;li&lt;/span&gt; &lt;b class=&quot;hl-tag&quot;&gt;time&lt;/b&gt; &lt;span class=&quot;hl-operator&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;hl-property&quot;&gt;padding-right&lt;/span&gt;&lt;span class=&quot;hl-operator&quot;&gt;:&lt;/span&gt; &lt;i class=&quot;hl-number&quot;&gt;1em&lt;/i&gt;&lt;span class=&quot;hl-operator&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;hl-property&quot;&gt;white-space&lt;/span&gt;&lt;span class=&quot;hl-operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hl-identifier&quot;&gt;nowrap&lt;/span&gt;&lt;span class=&quot;hl-operator&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;hl-operator&quot;&gt;}&lt;/span&gt;
&lt;b class=&quot;hl-tag&quot;&gt;ul&lt;/b&gt;&lt;span class=&quot;hl-operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;hl-identifier&quot;&gt;posts&lt;/span&gt; &lt;span class=&quot;hl-identifier&quot;&gt;li&lt;/span&gt; &lt;b class=&quot;hl-tag&quot;&gt;time&lt;/b&gt;&lt;span class=&quot;hl-operator&quot;&gt;,&lt;/span&gt; &lt;b class=&quot;hl-tag&quot;&gt;ul&lt;/b&gt;&lt;span class=&quot;hl-operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;hl-identifier&quot;&gt;posts&lt;/span&gt; &lt;span class=&quot;hl-identifier&quot;&gt;li&lt;/span&gt; &lt;b class=&quot;hl-tag&quot;&gt;a&lt;/b&gt; &lt;span class=&quot;hl-operator&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;hl-property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;hl-operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hl-constant&quot;&gt;table-cell&lt;/span&gt;&lt;span class=&quot;hl-operator&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;hl-property&quot;&gt;padding-bottom&lt;/span&gt;&lt;span class=&quot;hl-operator&quot;&gt;:&lt;/span&gt; &lt;i class=&quot;hl-number&quot;&gt;0.5em&lt;/i&gt;&lt;span class=&quot;hl-operator&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;hl-operator&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
</content>
</entry>
<entry>
<title>Use ImageMagick&#039;s &quot;mogrify&quot; tool for converting iPhone photos to JPEG</title>
<id>https://jaredkrinke.github.io/til/convert-iphone-photos-to-jpg.html</id>
<link rel="alternate" href="https://jaredkrinke.github.io/til/convert-iphone-photos-to-jpg.html"/>
<updated>2025-06-27T00:00:00.000Z</updated>
<summary type="text">Use ImageMagick&#039;s &quot;mogrify&quot; tool for converting iPhone photos to JPEG</summary>
<content type="html">&lt;p&gt;To convert from iPhones&#039; &lt;code&gt;.heic&lt;/code&gt; format to &lt;code&gt;.jpg&lt;/code&gt;, use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mogrify -format jpg *.heic
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;At some point, iPhones started defaulting to some new format named HEIC that is very poorly supported by default on Windows (and possibly elsewhere). If you need to use these photos outside of Apple&#039;s ecosystem, you can convert them to the universally supported JPEG format using &lt;a href=&quot;https://imagemagick.org/&quot;&gt;ImageMagick&lt;/a&gt;&#039;s &lt;code&gt;mogrify&lt;/code&gt; tool, as in the command line above.&lt;/p&gt;
</content>
</entry>
<entry>
<title>Use &quot;--transform&quot; to put files into subdirectory of a tarball</title>
<id>https://jaredkrinke.github.io/til/tar-into-subdir.html</id>
<link rel="alternate" href="https://jaredkrinke.github.io/til/tar-into-subdir.html"/>
<updated>2025-06-26T00:00:00.000Z</updated>
<summary type="text">Use &quot;--transform&quot; to put files into subdirectory of a tarball</summary>
<content type="html">&lt;p&gt;When packaging software with dependencies on Linux (and probably POSIX), it&#039;s customary to put everything into a named, versioned subdirectory, e.g. so that &lt;code&gt;tar zxf foobar-0.1.tar.gz&lt;/code&gt; unpacks everything into its own directory, named &lt;code&gt;foobar-0.1/&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;An easy way to create such a tarball is:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tar czf foobar-$1-linux-x86_64.tar.gz --transform &amp;quot;s,^,foobar-$1/,&amp;quot; &amp;lt;list of files and directories here&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</content>
</entry>
</feed>
